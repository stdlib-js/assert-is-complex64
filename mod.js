// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var t="function"==typeof Object.defineProperty?Object.defineProperty:null;var r=Object.defineProperty,e=Object.prototype,n=e.toString,o=e.__defineGetter__,i=e.__defineSetter__,u=e.__lookupGetter__,a=e.__lookupSetter__;var c=function(){try{return t({},"x",{}),!0}catch(t){return!1}}()?r:function(t,r,c){var f,l,y,p;if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof c||null===c||"[object Array]"===n.call(c))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+c+"`.");if((l="value"in c)&&(u.call(t,r)||a.call(t,r)?(f=t.__proto__,t.__proto__=e,delete t[r],t[r]=c.value,t.__proto__=f):t[r]=c.value),y="get"in c,p="set"in c,l&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&o&&o.call(t,r,c.get),p&&i&&i.call(t,r,c.set),t};function f(t,r,e){c(t,r,{configurable:!1,enumerable:!1,writable:!1,value:e})}function l(t){return"number"==typeof t}var y="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function p(){return y&&"symbol"==typeof Symbol.toStringTag}var s=Object.prototype.toString;var b=Object.prototype.hasOwnProperty;var m="function"==typeof Symbol?Symbol.toStringTag:"";var v=p()?function(t){var r,e,n,o,i;if(null==t)return s.call(t);e=t[m],i=m,r=null!=(o=t)&&b.call(o,i);try{t[m]=void 0}catch(r){return s.call(t)}return n=s.call(t),r?t[m]=e:delete t[m],n}:function(t){return s.call(t)},_=Number,h=_.prototype.toString;var d=p();function w(t){return"object"==typeof t&&(t instanceof _||(d?function(t){try{return h.call(t),!0}catch(t){return!1}}(t):"[object Number]"===v(t)))}function g(t){return l(t)||w(t)}f(g,"isPrimitive",l),f(g,"isObject",w);var E="function"==typeof Math.fround?Math.fround:null,j="function"==typeof Float32Array;var S=Number.POSITIVE_INFINITY,A="function"==typeof Float32Array?Float32Array:null;var T="function"==typeof Float32Array?Float32Array:void 0;var O=new(function(){var t,r,e;if("function"!=typeof A)return!1;try{r=new A([1,3.14,-3.14,5e40]),e=r,t=(j&&e instanceof Float32Array||"[object Float32Array]"===v(e))&&1===r[0]&&3.140000104904175===r[1]&&-3.140000104904175===r[2]&&r[3]===S}catch(r){t=!1}return t}()?T:function(){throw new Error("not implemented")})(1);var P="function"==typeof E?E:function(t){return O[0]=t,O[0]};function F(t,r){if(!(this instanceof F))throw new TypeError("invalid invocation. Constructor must be called with the `new` keyword.");if(!l(t))throw new TypeError("invalid argument. Real component must be a number primitive. Value: `"+t+"`.");if(!l(r))throw new TypeError("invalid argument. Imaginary component must be a number primitive. Value: `"+r+"`.");return c(this,"re",{configurable:!1,enumerable:!0,writable:!1,value:P(t)}),c(this,"im",{configurable:!1,enumerable:!0,writable:!1,value:P(r)}),this}function N(){return/^\s*function\s*([^(]*)/i}f(F,"BYTES_PER_ELEMENT",4),f(F.prototype,"BYTES_PER_ELEMENT",4),f(F.prototype,"byteLength",8),f(F.prototype,"toString",(function(){var t=""+this.re;return this.im<0?t+=" - "+-this.im:t+=" + "+this.im,t+="i"})),f(F.prototype,"toJSON",(function(){var t={type:"Complex64"};return t.re=this.re,t.im=this.im,t}));var B=/^\s*function\s*([^(]*)/i;f(N,"REGEXP",B);var I=Array.isArray?Array.isArray:function(t){return"[object Array]"===v(t)};function V(t){return null!==t&&"object"==typeof t}function x(t){var r,e,n,o;if(("Object"===(e=v(t).slice(8,-1))||"Error"===e)&&t.constructor){if("string"==typeof(n=t.constructor).name)return n.name;if(r=B.exec(n.toString()))return r[1]}return V(o=t)&&(o._isBuffer||o.constructor&&"function"==typeof o.constructor.isBuffer&&o.constructor.isBuffer(o))?"Buffer":e}function M(t){return t instanceof F||"Complex64"===x(t)}f(V,"isObjectLikeArray",function(t){if("function"!=typeof t)throw new TypeError("invalid argument. Must provide a function. Value: `"+t+"`.");return function(r){var e,n;if(!I(r))return!1;if(0===(e=r.length))return!1;for(n=0;n<e;n++)if(!1===t(r[n]))return!1;return!0}}(V));export{M as default};
//# sourceMappingURL=mod.js.map
